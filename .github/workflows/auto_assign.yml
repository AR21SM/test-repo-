name: Auto-comment on issues from PR

on:
  pull_request_target:
    types: [opened]

permissions:
  issues: write
  pull-requests: read

jobs:
  comment-on-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Comment on linked issue from PR body or commits
        uses: actions/github-script@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const prNumber = context.payload.pull_request.number;
            const prAuthor = context.payload.pull_request.user.login;
            const prLink = context.payload.pull_request.html_url;

            const pattern = /(?:closes|fixes|resolves)\s+#(\d+)/gi;
            const issueNumbers = new Set();
            
            const prBody = context.payload.pull_request.body;
            if (prBody) {
              for (const match of prBody.matchAll(pattern)) {
                issueNumbers.add(match[1]);
              }
            }

            const { data: commits } = await github.rest.pulls.listCommits({
              owner,
              repo,
              pull_number: prNumber,
            });

            for (const commit of commits) {
              const commitMessage = commit.commit.message;
              if (commitMessage) {
                for (const match of commitMessage.matchAll(pattern)) {
                  issueNumbers.add(match[1]);
                }
              }
            }

            if (issueNumbers.size === 0) {
              return;
            }
            
            for (const issueNumber of issueNumbers) {
              const { data: comments } = await github.rest.issues.listComments({
                owner,
                repo,
                issue_number: issueNumber,
              });

              const botCommentIdentifier = "This issue has been claimed by";
              const alreadyCommented = comments.some(comment => comment.body.includes(botCommentIdentifier));

              if (alreadyCommented) {
                continue;
              }

              try {
                const commentBody = `This issue has been claimed by @${prAuthor} via pull request ${prLink}.\n\nTo encourage collaboration, please check with the contributor or a maintainer before opening a new PR for this issue.`;
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: issueNumber,
                  body: commentBody,
                });
              } catch (error) {
                // Log error if commenting fails, otherwise the action fails silently.
                console.log(`Failed to comment on issue #${issueNumber}: ${error.message}`);
              }
            }
